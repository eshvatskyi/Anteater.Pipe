name: create release

on:
  push:
    tags:
      - 'v*'

env:
  BUILD_CONFIGURATION: Release
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs: 
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - id: version
        uses: ncipollo/semantic-version-action@v1

      - name: Assigning release version
        run: |
          if [ ${{ steps.version.outputs.micro_patch }} > 0 ]; 
          then
            echo "::set-env name=RELEASE_VERSION::${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}.${{ steps.version.outputs.patch }}-build-${{ steps.version.outputs.micro_patch }}"
          else
            echo "::set-env name=RELEASE_VERSION::${{ steps.version.outputs.major }}.${{ steps.version.outputs.minor }}.${{ steps.version.outputs.patch }}"
          fi

      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.100

      - name: Pack nuget release package
        run: dotnet pack -c ${{ env.BUILD_CONFIGURATION }} -p:PackageVersion='${{ env.RELEASE_VERSION }}' -o ./out

      - name: Publish
        if: success()
        run: dotnet nuget push ./out/Anteater.Pipe.${{ env.RELEASE_VERSION }}.nupkg -k ${{ secrets.NUGET_APIKEY }} -s https://api.nuget.org/v3/index.json

      - name: Creating release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: ${{ steps.version.outputs.micro_patch > 0 }}
