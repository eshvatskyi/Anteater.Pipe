# EditorConfig is awesome: http://EditorConfig.org
# Visual Studio docs for editorconfig: https://docs.microsoft.com/en-us/visualstudio/ide/editorconfig-code-style-settings-reference

# Top-most EditorConfig file
root = true

[*]
indent_style = space
insert_final_newline = true
trim_trailing_whitespace = true

[*.{cs,fs}]
indent_size = 4

# csharp and dotnet default settings are left in comments below
# all severity levels are capped at suggestion until editorconfig is part of the build in a future version of Roslyn
[*.cs]
# csharp_indent_block_contents = true
# csharp_indent_braces = false
# csharp_indent_case_contents = true
# csharp_indent_case_contents_when_block = true
# csharp_indent_labels = one_less_than_current
# csharp_indent_switch_labels = true
# csharp_new_line_before_catch = true
# csharp_new_line_before_else = true
# csharp_new_line_before_finally = true
# csharp_new_line_before_members_in_anonymous_types = true
# csharp_new_line_before_members_in_object_initializers = true
# csharp_new_line_before_open_brace = all
# csharp_new_line_between_query_expression_clauses = true
csharp_prefer_braces = true : suggestion
# csharp_prefer_simple_default_expression = true : suggestion
# csharp_preserve_single_line_blocks = true
# csharp_preserve_single_line_statements = true
# csharp_space_after_cast = false
# csharp_space_after_colon_in_inheritance_clause = true
# csharp_space_after_comma = true
# csharp_space_after_dot = false
# csharp_space_after_keywords_in_control_flow_statements = true
# csharp_space_after_semicolon_in_for_statement = true
# csharp_space_around_binary_operators = before_and_after
# csharp_space_around_declaration_statements = do_not_ignore
# csharp_space_before_colon_in_inheritance_clause = true
# csharp_space_before_comma = false
# csharp_space_before_dot = false
# csharp_space_before_open_square_brackets = false
# csharp_space_before_semicolon_in_for_statement = false
# csharp_space_between_empty_square_brackets = false
# csharp_space_between_method_call_empty_parameter_list_parentheses = false
# csharp_space_between_method_call_name_and_opening_parenthesis = false
# csharp_space_between_method_call_parameter_list_parentheses = false
# csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
# csharp_space_between_method_declaration_name_and_open_parenthesis = false
# csharp_space_between_method_declaration_parameter_list_parentheses = false
# csharp_space_between_parentheses = false
# csharp_space_between_square_brackets = false
# csharp_style_conditional_delegate_call = true : suggestion
# csharp_style_deconstructed_variable_declaration = true : suggestion
csharp_style_expression_bodied_accessors = true : suggestion
# csharp_style_expression_bodied_constructors = false : none
csharp_style_expression_bodied_indexers = true : suggestion
# csharp_style_expression_bodied_methods = false : none
# csharp_style_expression_bodied_operators = false : none
csharp_style_expression_bodied_properties = true : suggestion
# csharp_style_inlined_variable_declaration = true : suggestion
# csharp_style_pattern_local_over_anonymous_function = true : suggestion
# csharp_style_pattern_matching_over_as_with_null_check = true : suggestion
# csharp_style_pattern_matching_over_is_with_cast_check = true : suggestion
# csharp_style_throw_expression = true : suggestion
csharp_style_var_elsewhere = true : suggestion
csharp_style_var_for_built_in_types = true : suggestion
csharp_style_var_when_type_is_apparent = true : suggestion
# dotnet_separate_import_directive_groups = false
# dotnet_sort_system_directives_first = true
# dotnet_style_coalesce_expression = true : suggestion
# dotnet_style_collection_initializer = true : suggestion
# dotnet_style_explicit_tuple_names = true : suggestion
# dotnet_style_null_propagation = true : suggestion
# dotnet_style_object_initializer = true : suggestion
dotnet_style_predefined_type_for_locals_parameters_members = true : suggestion
dotnet_style_predefined_type_for_member_access = true : suggestion
# dotnet_style_prefer_is_null_check_over_reference_equality_method = true : suggestion
dotnet_style_qualification_for_event = false : suggestion
dotnet_style_qualification_for_field = false : suggestion
dotnet_style_qualification_for_method = false : suggestion
dotnet_style_qualification_for_property = false : suggestion
dotnet_style_require_accessibility_modifiers = for_non_interface_members : suggestion

# Custom DotNet Naming Rules

dotnet_naming_rule.constant_pascal_rule.severity = suggestion
dotnet_naming_rule.constant_pascal_rule.style = pascal_case_style
dotnet_naming_rule.constant_pascal_rule.symbols = constant_symbols

dotnet_naming_rule.interface_pascal_rule.severity = suggestion
dotnet_naming_rule.interface_pascal_rule.style = interface_style
dotnet_naming_rule.interface_pascal_rule.symbols = interface_symbols

dotnet_naming_rule.private_field_camel_rule.severity = suggestion
dotnet_naming_rule.private_field_camel_rule.style = private_field_style
dotnet_naming_rule.private_field_camel_rule.symbols = private_field_symbols

dotnet_naming_rule.parameter_camel_rule.severity = suggestion
dotnet_naming_rule.parameter_camel_rule.style = camel_case_style
dotnet_naming_rule.parameter_camel_rule.symbols = parameter_symbols

dotnet_naming_rule.default_pascal_rule.severity = suggestion
dotnet_naming_rule.default_pascal_rule.style = pascal_case_style
dotnet_naming_rule.default_pascal_rule.symbols = pascal_case_symbols

# Custom DotNet Naming Styles

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

dotnet_naming_style.camel_case_style.capitalization = camel_case

dotnet_naming_style.interface_style.required_prefix = I
dotnet_naming_style.interface_style.capitalization = pascal_case

dotnet_naming_style.private_field_style.required_prefix = _
dotnet_naming_style.private_field_style.capitalization = camel_case

# Custom DotNet Naming Symbols

dotnet_naming_symbols.private_field_symbols.applicable_kinds = field,event,delegate
dotnet_naming_symbols.private_field_symbols.applicable_accessibilities = private

dotnet_naming_symbols.interface_symbols.applicable_kinds = interface

dotnet_naming_symbols.constant_symbols.required_modifiers = const

dotnet_naming_symbols.parameter_symbols.applicable_kinds = parameter

dotnet_naming_symbols.all_symbols.applicable_kinds = *

[*.{md,markdown}]
trim_trailing_whitespace = false
